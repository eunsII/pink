# jsp03

-------------------------------------------------------------------------------------------------
내장 객체의 영역
==> 내장 객체를 이용하면 데이터를 보관하고 사용할 수 있다.
	즉, 서버 스스로가 필요한 데이터를 보관했다가 사용할 수 있게된다.
	
	물론 자바의 형식으로 변수에 기억해 놓았다가 사용해도되지만
	==> 자바로 변수를 만들면
		거의 지역변수로 만들어지게 되므로 같은 지역(문서)에서만
		사용할 수 밖에 없는 문제점이 있다.
		
	좀더 다양한 문서에서 데이터를 공유할 수 있는 기능을 제공하고 있다.
	
	문제는
		내장객체 중 무엇을 이용해서 데이터를 기억했는가 에 따라서
		그 데이터를 사용할 수 있는 영역달지게 된다.
		
		따라서 이것을 우리는 내장객체의 영역이라고 표현한다.
		
	예 ]
		
		request.setAttribute();
		==> 이렇게 데이터를 기억하면 
			이것은 요청이 유지되는 상태에서는 그 데이터를 사용할 수 있다.
			
		session.setAttribute();
		==> 이렇게 데이터를 기억하면
			이것은 세션이 유지되는 동안에는 그 데이터를 사용할 수 있다.
			
			
	1) pageContext
		==> 같은 문서 안에서만 그 데이터를 사용할 수 있다.
		<%
			int num = 30000;
		%>
		이렇게 변수를 만들면 sevice 함수내에  num 이라는 변수가 생기게되므로 지역변수가 된다.
		
		선언자 방식으로 
		<%!
			int num = 10;
		%>
		이렇게 만들게 되면
		이 jsp 파일이 클래스로 변환이 됬을때 
		그 클래스의 멤버 변수로 만들어지게 되므로 
		역시 이 페이지에서만 사용할 수 있는 변수가 된다.
		
			==> 이것은 거의 사용하지 않는다.
				<== 함수 내에서 변수로 기억하는 것하고 동일하기 때문에...
				
	*****		
	2) request
		==> 같은 요청을 유지한 문서에서 그 데이터를 사용할 수 있다.
	
	*****
	3) session
		==> 같은 세션을 유지한 문서에서 그 데이터를 사용할 수 있다.
		
	4) application
		==> 같은 서버를 사용하는 문서에서 그 데이터를 사용할 수 있다.
			웹 서버는 각각의 클라이언트에게 독립적으로 응답하는 것이 일반적이다.
			즉, 다른 클라이언트의 요청과 상관없이
			그 클라이언트가 요청한 문제점을 해결하는 것이 일반적이다.
			굳이 모든 문서에서 동일한 데이터를 사용할 일은 
			거의 존재하지 않는다.
			
	참고 ]
		데이터를 입력
			 setAttribute("키값", 데이터);
			 ==> 마치 Map 처럼 데이터를 입력하면 된다.
			 	 이때 입력되는 데이터는 모두 Object 타입으로 자동 형변환된다.
			 	 
		데이터를 꺼낼때
			getAttribute("키값");
			==> 마치 Map에서 데이터를 꺼내는 것처럼 사용하면 된다.
				꺼낸데이터는 원래 형태로 강제형변환 해줘야한다.
				
	주의 ]
		parameter 는 데이터를 꺼내는 함수는 존재하지만
		데이터를 입력하는 함수는 존재하지 않는다.
		request.getParameter("키값"); ----> O
		
		request.setParameter("키값", 데이터); -------> X
		
		parameter는 문자열로 전송이 되므로
		꺼내면 문자열 데이터가 된다.
		따라서 문자열 변수로 받아서 사용해야 하고
		다른 형태로 변환되어야한다면 강제형변환 또는 파싱을 해야한다.
		
==========================================================================================
액션 태그
==> JSP는 HTML 언어를 기반으로 해서
	필요한 위치에 자바적인 요소를 스크립트 하는 방식으로 만들어진 언어이다.
	
	그래서 HTML 은 태그를 중심으로 작성을 하고
	자바 요소는 <% %> 를 이용해서 처리하므로
	조금은 불편함이 있다.
	
	자주 사용하는 자바적인 기능을 HTML 처럼 태그방식으로 사용할 수 있도록
	만들어 놓은 보조적인 명령을 말한다.
	
	1. forward 를 대신하는 액션태그
		
		형식 1 ]
			
			<jsp:forward	page="대신응답할 문서경로" />
					또는
			<jsp:forward	page="대신응답할 문서경로" ></jsp:forward>
			
			==> 단순히 보여줄 페이지만 병경하는 문법
			
		형식 2 ]
			
			<jsp:forward	page="대신응답할 문서경로">
				<jsp:param name="키값"	value="데이터" scope="???" />
				...
			</jsp:forward>
			
			==> 보여줄 페이지를 변경하면서 부가 정보를 알려준다.
			
	참고 ]
		액션태그는 xhtml 을 기반으로 제작된 태그이다.
		따라서
		몸체가 있는 태그
		
			<태그이름>
				내용
			</태그이름>
			
		몸체가 없는 태그
			<태그이름	속성="속성값" 	/>
	
	***	
	2. 다른 문서를 포함시키는 기능을 가진 액션 태그
	 	(<%@ include file="???" %>) 과 같은 역할을 하는 액션태그
	 	
	 	형식 ]
	 		<jsp:include page="합칠문서경로" />
	 		
	 	주의 ]
	 		<%@ include file="합칠문서경로" %> 
	 		==> 먼저 문서의 내용을 합쳐서 클래스로 만들고 컴파일을 한다.
	 			합쳤을때 충돌날 위험이 있다.
	 		
	 		<jsp:include page="합칠문서경로" />
	 		==> 각각 합칠문서와 합쳐질문서를 각각 클래스로 만들어서 실행한 후
	 			실행 결과만 합치게된다.
	 			따라서 따로 컴파일이 되므로 충돌날 염려가 없다.
	 			
===========================================================================================================
JSTL(Java Standard Tag Library)
==> JSP를 제작하다보면 HTML과 자바소스코드가 혼용되어서 만들어진다.
	
	예 ]
		<% 자바소스코드 %>
		HTML 태그들....
		<%= 변수 또는 함수 %>
		태그들...
	
	따라서 자바적인 내용을 입력하는 경우 스크립트 릿 방식을 사용해서
	입력하게 된다.
	==> 이것은 개발자가 뷰 문서를 제작할 때 항상 고민되는 부분이다.
	
	JSTL 이란?
	JSP는 HTML(태그를 이용한 문서작업)이 우선되므로
	자바적인 요소 역시 태그 형식으로 사용할 수 있도록 해서
	(그러면 문서를 작성하는 사람이 한가지 형식으로만 만들 수 있게 되므로)
	통일된 방식으로 문서를 만들 수 있도록 만들어 놓은 라이브러리 이다.
	
	예 ]
		
		스크립트 릿 방식으로 반복해서 태그를 만들경우..
		<%
			for(int i = 0 ; i < 10 ; i++ ){
		%>
			반복되서 만들어질 태그들
		<%
			}
		%>

		태그라이브러리를 사용해서 만들경우
		<c:forEach begin="1" end="10" step="1">
			반복되서 만들어질 태그들...
		</c:forEach>
		
		<c:forEach var="data" items="${ARR}">
			태그들...
			${data}
			태그들...
		</c:forEach>
		
JSTL 사용방법
	1. JSTL 라이브러리를 다운 받아서 프로젝트의
		WEB-INF/lib/ 폴더에 붙여넣기 한다.
		
		파일 ]
			jstl-1.2.jar, jstl-api-1.2.jar
			
		참고 ]
			/WEB-INF/lib/ 폴더는 
			작업중인 프로젝트에서 사용할 외부 라이브러리를 추가해주는 폴더...
		
	참고 ]
		
		
		
